@using WebSite.Models
@model WebSite.ViewModels.GameBoardViewModel

@{
    ViewBag.Title = "GameBoard";
    ViewBag.Rock = Weapon.rock;
    ViewBag.Paper = Weapon.paper;
    ViewBag.Scissors = Weapon.scissors;
}

<h2>GameBoard</h2>

<h3>Player 1:</h3>
Click image to Choose your weapon...
<ul>
    <li style="display: inline">
        <a href="@Url.Action("PlayRock")">
            @Html.DisplayFor(m => Model.Rock)
        </a>
        
    </li> 
    <li style="display: inline">
        <a href="@Url.Action("PlayPaper")">
            @Html.DisplayFor(m => Model.Paper)
        </a>
    </li> 
    <li style="display: inline">
        <a href="@Url.Action("PlayScissors")">
            @Html.DisplayFor(m => Model.Scissors)
        </a>
    </li> 
</ul>

<br/>
<br/>

<h3>Computer</h3>
Computer will choose after you click but won't cheat, promise....
<ul>
    <li style="display: inline">
        @Html.DisplayFor(m => Model.Rock)
        
    </li> 
    <li style="display: inline">
        @Html.DisplayFor(m => Model.Paper)
        
    </li> 
    <li style="display: inline">
        @Html.DisplayFor(m => Model.Scissors)
    </li> 
</ul>

<br/>
<br/>

<h2>And the winner is...</h2>
<ul>
    @if (Model.WinnerMove != null && Model.LosingMove != null)
    {
        <li><label>Winner: @Model.WinnerMove.PlayerName</label></li>
        <li style="display: inline">
        
            @Html.DisplayFor(m => Model.WinnerMove.WeaponType)
        </li>
        <li><label>Loser: @Model.LosingMove.PlayerName</label></li>
        <li style="display: inline">
        
            @Html.DisplayFor(m => Model.LosingMove.WeaponType)
        </li>
    }
</ul>

<h3>@Model.ResultText</h3>

@Html.ActionLink("Reset board", "GameBoard")